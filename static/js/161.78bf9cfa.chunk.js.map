{"version":3,"file":"static/js/161.78bf9cfa.chunk.js","mappings":"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","sources":["features/quizArchive/hooks/index.ts","libs/ui/components/TitleTypography.tsx","libs/utility/index.ts","libs/utility/pagination.ts","features/quizArchive/components/index.tsx","pages/QuizArchivePage.tsx"],"sourcesContent":["import { useCallback } from 'react'\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks'\r\n\r\nimport { quizArchiveActions, quizArchiveSelectors } from '../store'\r\nimport { QuizCollectionDto, QuizCollectionListDto } from '../types'\r\n\r\nexport type Operators = {\r\n  quizList: QuizCollectionListDto\r\n  editQuiz: QuizCollectionDto\r\n  getQuizCollectionList: () => void\r\n  getQuizCollection: (data: number) => void\r\n  updateQuizCollection: (data: QuizCollectionDto) => void\r\n  deleteQuizCollection: (data: QuizCollectionDto) => void\r\n}\r\n\r\nconst useQuizArchiveService = (): Readonly<Operators> => {\r\n  const dispatch = useAppDispatch()\r\n  const selects = useAppSelector(quizArchiveSelectors)\r\n\r\n  return {\r\n    quizList: selects.quizCollectionList,\r\n    editQuiz: selects.editCollection,\r\n\r\n    getQuizCollectionList: useCallback(\r\n      () => {\r\n        dispatch(quizArchiveActions.getQuizCollectionList())\r\n      },\r\n      [dispatch],\r\n    ),\r\n    getQuizCollection: useCallback(\r\n      (data: number) => {\r\n        dispatch(quizArchiveActions.getQuizCollection(data))\r\n      },\r\n      [dispatch],\r\n    ),\r\n    updateQuizCollection: useCallback(\r\n      (data: QuizCollectionDto) => {\r\n        dispatch(quizArchiveActions.updateQuizCollection(data))\r\n      },\r\n      [dispatch],\r\n    ),\r\n    deleteQuizCollection: useCallback(\r\n      (data: QuizCollectionDto) => {\r\n        dispatch(quizArchiveActions.deleteQuizCollection(data))\r\n      },\r\n      [dispatch],\r\n    ),\r\n  }\r\n}\r\n\r\nexport default useQuizArchiveService\r\n","import Typography from '@mui/material/Typography'\r\nimport React from 'react'\r\n\r\ntype PageTypographyProps = {\r\n  title: string\r\n}\r\n\r\nconst TitleTypography = (props: PageTypographyProps) => (\r\n  <>\r\n    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\r\n      {props.title}\r\n    </Typography>\r\n  </>\r\n)\r\n\r\nexport default TitleTypography\r\n","export const isNullOrUndefined = (value: string | null) => value === undefined || value === null ","/* eslint-disable @typescript-eslint/indent */\r\nexport type Order = 'asc' | 'desc'\r\n\r\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n\tif (b[orderBy] < a[orderBy]) {\r\n\t\treturn -1\r\n\t}\r\n\tif (b[orderBy] > a[orderBy]) {\r\n\t\treturn 1\r\n\t}\r\n\treturn 0\r\n}\r\n\r\n\r\nexport function getComparator<Key extends keyof never>(\r\n\torder: Order,\r\n\torderBy: Key,\r\n): (\r\n\ta: { [key in Key]: number | string | Date | null },\r\n\tb: { [key in Key]: number | string | Date | null },\r\n) => number {\r\n\treturn order === 'desc'\r\n\t\t? (a, b) => descendingComparator(a, b, orderBy)\r\n\t\t: (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\n// Since 2020 all major browsers ensure sort stability with Array.prototype.sort().\r\n// stableSort() brings sort stability to non-modern browsers (notably IE11). If you\r\n// only support modern browsers you can replace stableSort(exampleArray, exampleComparator)\r\n// with exampleArray.slice().sort(exampleComparator)\r\nexport function stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n\tconst stabilizedThis = array.map((el, index) => [el, index] as [T, number])\r\n\tstabilizedThis.sort((a, b) => {\r\n\t\tconst order = comparator(a[0], b[0])\r\n\t\tif (order !== 0) {\r\n\t\t\treturn order\r\n\t\t}\r\n\t\treturn a[1] - b[1]\r\n\t})\r\n\treturn stabilizedThis.map((el) => el[0])\r\n}","/* eslint-disable @typescript-eslint/indent */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { Box, Checkbox, Grid, IconButton, InputBase, Menu, MenuItem, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, TextField, Toolbar, Tooltip, Typography } from '@mui/material'\r\nimport { alpha, styled } from '@mui/material/styles'\r\nimport { visuallyHidden } from '@mui/utils'\r\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit/dist/createAction'\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { connect } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport images from 'config/images'\r\nimport { AuthType } from 'features/authentication'\r\nimport LoadingComponent from 'libs/ui/components/Loading'\r\nimport { isNullOrUndefined } from 'libs/utility'\r\nimport { Order, getComparator, stableSort } from 'libs/utility/pagination'\r\nimport { ReducerType } from 'store'\r\nimport { useAppDispatch } from 'store/hooks'\r\n\r\nimport useQuizArchiveService from '../hooks'\r\nimport { quizArchiveActions } from '../store/slice'\r\nimport { QuizCollectionDto, QuizCollectionListDto, initQuizCollectionDto } from '../types'\r\n\r\nconst mapStateToProps = (state: ReducerType) => ({\r\n  quizCollectionList: state.quizArchive.quizCollectionList,\r\n  editCollection: state.quizArchive.editCollection,\r\n  addCollection: state.quizArchive.addCollection,\r\n  setAddCollection: quizArchiveActions.setAddCollection,\r\n  authData: state.authentication.authData,\r\n  isLoading: state.global.isLoading,\r\n})\r\n\r\ninterface Props {\r\n  quizCollectionList: QuizCollectionListDto\r\n  editCollection: QuizCollectionDto\r\n  addCollection: QuizCollectionDto\r\n  setAddCollection: ActionCreatorWithPayload<QuizCollectionDto, \"quizArchive/setAddCollection\">\r\n  authData: AuthType\r\n  isLoading: boolean\r\n}\r\n\r\n// #region Style\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    width: 'auto',\r\n  },\r\n}))\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}))\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}))\r\n// #endregion Style\r\n\r\n// #region Pagination Data Type\r\ninterface TableData {\r\n  id: number\r\n  name: string | null\r\n  noQuiz: number\r\n  updateTime: Date\r\n  action: string | null\r\n}\r\n\r\nfunction createTableData(\r\n  id: number,\r\n  noQuiz: number,\r\n  name: string,\r\n  updateTime: Date,\r\n  action: string | null = null\r\n): TableData {\r\n  return {\r\n    id,\r\n    noQuiz,\r\n    name,\r\n    updateTime,\r\n    action\r\n  }\r\n}\r\n\r\nfunction createTableDataFromDto(\r\n  dto: QuizCollectionDto,\r\n  action: string | null = null\r\n): TableData {\r\n  return {\r\n    id: dto.eId ?? -1,\r\n    noQuiz: dto.quizzes.length,\r\n    name: dto.name,\r\n    updateTime: dto.updatedAt ? new Date(dto.updatedAt.toString()) : new Date(),\r\n    action\r\n  }\r\n}\r\n\r\ninterface HeadCell {\r\n  id: keyof TableData\r\n  label: string | null\r\n  sortable: boolean\r\n  align: 'left' | 'center' | 'right'\r\n}\r\n\r\nconst headCells: readonly HeadCell[] = [\r\n  {\r\n    id: 'name',\r\n    label: 'Name',\r\n    sortable: true,\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'updateTime',\r\n    label: 'Update Time',\r\n    sortable: true,\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'noQuiz',\r\n    label: 'Number of Quiz',\r\n    sortable: true,\r\n    align: 'left'\r\n  },\r\n  {\r\n    id: 'action',\r\n    label: 'Actions',\r\n    sortable: false,\r\n    align: 'right'\r\n  }\r\n]\r\n\r\ninterface EnhancedTableProps {\r\n  numSelected: number\r\n  onRequestSort: (event: React.MouseEvent<unknown>, newOrderBy: keyof TableData) => void\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n  order: Order\r\n  orderBy: string\r\n  rowCount: number\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number\r\n}\r\n\r\nconst DEFAULT_ORDER = 'desc'\r\nconst DEFAULT_ORDER_BY = 'updateTime'\r\nconst DEFAULT_ROWS_PER_PAGE = Number.MAX_SAFE_INTEGER\r\nconst DEFAULT_ROWS_PER_PAGE_LIST = [Number.MAX_SAFE_INTEGER]\r\n// #endregion Pagination Data Type\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const { numSelected } = props\r\n  const { updateQuizCollection } = useQuizArchiveService()\r\n\r\n  const handleAddNew = useCallback((event) => {\r\n    event?.stopPropagation()\r\n    updateQuizCollection(initQuizCollectionDto)\r\n  }, [updateQuizCollection])\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <>\r\n          <Typography\r\n            sx={{ flex: '1 1 100%' }}\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n          >\r\n            {numSelected} selected\r\n          </Typography>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton>\r\n              <images.DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display={'flex'}\r\n          sx={{ flex: '1 1 100%' }}\r\n          justifyContent={'space-between'}>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <images.SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </Search>\r\n          <Tooltip title=\"Add\">\r\n            <IconButton onClick={handleAddNew}>\r\n              <images.AddIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      )}\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nconst EnhancedTableHead = (props: EnhancedTableProps) => {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props\r\n  const createSortHandler =\r\n    (newOrderBy: keyof TableData) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, newOrderBy)\r\n    }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            align={headCell.align}\r\n          >\r\n            {\r\n              headCell.sortable ?\r\n                <TableSortLabel\r\n                  active={orderBy === headCell.id}\r\n                  direction={orderBy === headCell.id ? order : 'asc'}\r\n                  onClick={createSortHandler(headCell.id)}\r\n                >\r\n                  {headCell.label}\r\n                  {orderBy === headCell.id ? (\r\n                    <Box component=\"span\" sx={visuallyHidden}>\r\n                      {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                    </Box>\r\n                  ) : null}\r\n                </TableSortLabel> :\r\n                headCell.label\r\n            }\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nconst ArchiveContainer = (props: Props) => {\r\n  const { t } = useTranslation()\r\n  const { addCollection, setAddCollection, editCollection, quizCollectionList, isLoading } = props\r\n  const navigate = useNavigate()\r\n  const dispatch = useAppDispatch()\r\n  const { getQuizCollectionList, updateQuizCollection, deleteQuizCollection } = useQuizArchiveService()\r\n\r\n  const tableData = useRef<TableData[]>([])\r\n  const [order, setOrder] = useState<Order>(DEFAULT_ORDER)\r\n  const [orderBy, setOrderBy] = useState<keyof TableData>(DEFAULT_ORDER_BY)\r\n  const [selected, setSelected] = useState<readonly number[]>([])\r\n  const [page, setPage] = useState(0)\r\n  const [visibleRows, setVisibleRows] = useState<TableData[] | null>(null)\r\n  const [rowsPerPage, setRowsPerPage] = useState(DEFAULT_ROWS_PER_PAGE)\r\n  const [editFieldRows, setEditFieldRows] = useState<(string | null)[]>([])\r\n\r\n  // #region Menu horizontal\r\n  const [anchorEditEl, setAnchorEditEl] = useState<null | HTMLElement>(null)\r\n  const isEditOpen = Boolean(anchorEditEl)\r\n  const [anchorMoreEl, setAnchorMoreEl] = useState<null | HTMLElement>(null)\r\n  const isMoreOpen = Boolean(anchorMoreEl)\r\n  const [anchorIndex, setAnchorIndex] = useState<number | null>(null)\r\n\r\n  const handleEditClick = (event: React.MouseEvent<HTMLButtonElement> | null, index: number | null = null) => {\r\n    event?.stopPropagation()\r\n    setAnchorIndex(index)\r\n    setAnchorEditEl(event == null ? event : event.currentTarget)\r\n  }\r\n\r\n  const handleMoreClick = (event: React.MouseEvent<HTMLButtonElement> | null, index: number | null = null) => {\r\n    event?.stopPropagation()\r\n    setAnchorIndex(index)\r\n    setAnchorMoreEl(event == null ? event : event.currentTarget)\r\n  }\r\n\r\n  const hideAnchorMenu = useCallback(() => {\r\n    setAnchorIndex(null)\r\n    setAnchorEditEl(null)\r\n    setAnchorMoreEl(null)\r\n  }, [])\r\n  // #endregion Menu horizontal\r\n\r\n  // #region Refresh on Rerender\r\n  useEffect(() => {\r\n    getQuizCollectionList()\r\n  }, [editCollection, getQuizCollectionList])\r\n\r\n  useEffect(() => {\r\n    if (!quizCollectionList.success || !quizCollectionList.collections) return\r\n    tableData.current = quizCollectionList.collections.map((ele) => createTableDataFromDto(ele))\r\n\r\n    let rowsOnMount = stableSort(\r\n      tableData.current,\r\n      getComparator(DEFAULT_ORDER, DEFAULT_ORDER_BY),\r\n    )\r\n    rowsOnMount = rowsOnMount.slice(\r\n      0 * DEFAULT_ROWS_PER_PAGE,\r\n      0 * DEFAULT_ROWS_PER_PAGE + DEFAULT_ROWS_PER_PAGE,\r\n    )\r\n\r\n    setVisibleRows(rowsOnMount)\r\n  }, [quizCollectionList, tableData])\r\n\r\n  useEffect(() => {\r\n    if (!quizCollectionList.success || !quizCollectionList.collections) return\r\n    setEditFieldRows((prev) => {\r\n      const newData = quizCollectionList.collections.map((_, index) => prev[index])\r\n      return newData\r\n    })\r\n  }, [quizCollectionList])\r\n\r\n  useEffect(() => {\r\n    if (addCollection.eId) {\r\n      dispatch(setAddCollection(initQuizCollectionDto))\r\n      navigate(`/archive/edit/${addCollection.eId}`)\r\n    }\r\n  }, [addCollection.eId, dispatch, navigate, setAddCollection])\r\n  // #endregion Refresh on Rerender\r\n\r\n  // #region Paginate Data\r\n  const handleChangePage = useCallback(\r\n    (event: unknown, newPage: number) => {\r\n      setPage(newPage)\r\n\r\n      const sortedRows = stableSort(tableData.current, getComparator(order, orderBy))\r\n      const updatedRows = sortedRows.slice(\r\n        newPage * rowsPerPage,\r\n        newPage * rowsPerPage + rowsPerPage,\r\n      )\r\n      setVisibleRows(updatedRows)\r\n    },\r\n    [order, orderBy, rowsPerPage, tableData],\r\n  )\r\n\r\n  const handleChangeRowsPerPage = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      const updatedRowsPerPage = parseInt(event.target.value, 10)\r\n      setRowsPerPage(updatedRowsPerPage)\r\n\r\n      setPage(0)\r\n\r\n      const sortedRows = stableSort(tableData.current, getComparator(order, orderBy))\r\n      const updatedRows = sortedRows.slice(\r\n        0 * updatedRowsPerPage,\r\n        0 * updatedRowsPerPage + updatedRowsPerPage,\r\n      )\r\n      setVisibleRows(updatedRows)\r\n    },\r\n    [order, orderBy, tableData],\r\n  )\r\n  // #endregion Paginate Data\r\n\r\n  // #region Arrange Data\r\n  const handleRequestSort = useCallback(\r\n    (event: React.MouseEvent<unknown>, newOrderBy: keyof TableData) => {\r\n      const isAsc = orderBy === newOrderBy && order === 'asc'\r\n      const toggledOrder = isAsc ? 'desc' : 'asc'\r\n      setOrder(toggledOrder)\r\n      setOrderBy(newOrderBy)\r\n\r\n      const sortedRows = stableSort(tableData.current, getComparator(toggledOrder, newOrderBy))\r\n      const updatedRows = sortedRows.slice(\r\n        page * rowsPerPage,\r\n        page * rowsPerPage + rowsPerPage,\r\n      )\r\n      setVisibleRows(updatedRows)\r\n    },\r\n    [order, orderBy, page, rowsPerPage, tableData],\r\n  )\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelected = tableData.current.map((n) => n.id)\r\n      setSelected(newSelected)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleCheckboxClick = (event: React.MouseEvent<unknown>, eId: number) => {\r\n    if (isMoreOpen || isEditOpen) return\r\n\r\n    const selectedIndex = selected.indexOf(eId)\r\n    let newSelected: readonly number[] = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, eId)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n  // #endregion Arrange Data\r\n\r\n  // #region Edit Data\r\n  const getIndexOfDataByRowIndex = useCallback((rowIndex: number): number | null => {\r\n    if (!visibleRows) return null\r\n    const data = quizCollectionList.collections.find((ele) => ele.eId === visibleRows[rowIndex].id)\r\n    console.log(rowIndex, visibleRows[rowIndex])\r\n    console.log(data)\r\n    if (!data) return null\r\n    const index = quizCollectionList.collections.indexOf(data)\r\n    console.log(index)\r\n    return index\r\n  }, [quizCollectionList.collections, visibleRows])\r\n\r\n  const setEditFieldRowsCallback = useCallback((rowIndex, value) => {\r\n    setEditFieldRows((prev) => {\r\n      const newData = prev?.map(_ => _) ?? null\r\n      if (newData) newData[rowIndex] = value\r\n      return newData\r\n    })\r\n  }, [])\r\n\r\n  const handleEditFieldClick = (event: React.MouseEvent, index: number) => {\r\n    event?.stopPropagation()\r\n    const valueFromRow = visibleRows && !isNullOrUndefined(visibleRows[index].name) ? visibleRows[index].name : ''\r\n    setEditFieldRowsCallback(index, !isNullOrUndefined(editFieldRows[index]) ? null : valueFromRow)\r\n    hideAnchorMenu()\r\n  }\r\n\r\n  const handleEditDetailsClick = (event: React.MouseEvent, rowIndex: number) => {\r\n    event?.stopPropagation()\r\n    const index = getIndexOfDataByRowIndex(rowIndex)\r\n    if (index === null) return\r\n    navigate(`/archive/edit/${quizCollectionList.collections[index].eId}`)\r\n    hideAnchorMenu()\r\n  }\r\n\r\n  const handleSaveClick = (event: React.MouseEvent, rowIndex: number) => {\r\n    event?.stopPropagation()\r\n    const index = getIndexOfDataByRowIndex(rowIndex)\r\n    if (index === null) return\r\n    const newDto = { ...quizCollectionList.collections[index], name: editFieldRows[rowIndex] }\r\n    updateQuizCollection(newDto)\r\n    setEditFieldRowsCallback(rowIndex, null)\r\n  }\r\n\r\n  const handleDeleteClick = (event: React.MouseEvent, rowIndex: number) => {\r\n    event?.stopPropagation()\r\n    const index = getIndexOfDataByRowIndex(rowIndex)\r\n    if (index === null) return\r\n    deleteQuizCollection(quizCollectionList.collections[index])\r\n    hideAnchorMenu()\r\n  }\r\n  // #endregion Edit Data\r\n\r\n  const isSelected = (id: number) => selected.indexOf(id) !== -1\r\n\r\n  const rowNameField = function rowNameField(row: TableData, index: number) {\r\n    if (!visibleRows) return <></>\r\n\r\n    // console.log(index, editFieldRows[index])\r\n    return (\r\n      editFieldRows && !isNullOrUndefined(editFieldRows[index]) ?\r\n        <Box display={'flex'}>\r\n          <TextField\r\n            type='text'\r\n            required\r\n            value={editFieldRows[index]}\r\n            onClick={(evt) => evt?.stopPropagation()}\r\n            onChange={(evt) => {\r\n              setEditFieldRowsCallback(index, evt.target.value)\r\n            }}\r\n            variant='outlined'\r\n            multiline\r\n            maxRows={12}\r\n            sx={{\r\n              input: { color: 'white', height: '100%', border: 'none' },\r\n              '& .MuiInputBase-root,.MuiInputBase-root:hover': {\r\n                height: '100%',\r\n                backgroundColor: '#00000055',\r\n                color: 'white',\r\n                '& > fieldset': {\r\n                  borderColor: '#E0E3E755 !important',\r\n                  borderWidth: 1,\r\n                },\r\n              },\r\n            }}\r\n            style={{ width: '100%' }}\r\n          />\r\n          <Tooltip title=\"Save\">\r\n            <IconButton onClick={(evt) => handleSaveClick(evt, index)}>\r\n              <images.SaveIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        :\r\n        <div>{visibleRows[index].name}</div>\r\n    )\r\n  }\r\n\r\n  const rowActions = function rowActions(row: TableData, index: number) {\r\n    return (\r\n      <Grid container justifyContent={'right'}>\r\n        <div>\r\n          <IconButton\r\n            aria-controls={isEditOpen && anchorIndex === index ? 'edit-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={isEditOpen && anchorIndex === index ? 'true' : undefined}\r\n            onClick={(evt) => handleEditClick(evt, index)}>\r\n            <images.UpdateIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"edit-menu\"\r\n            anchorEl={anchorEditEl}\r\n            open={isEditOpen && anchorIndex === index}\r\n            onClose={() => handleEditClick(null)}\r\n            MenuListProps={{\r\n              'aria-labelledby': 'basic-button',\r\n            }}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          >\r\n            <MenuItem onClick={(evt) => handleEditFieldClick(evt, index)}>\r\n              <images.EditIcon />\r\n              <div style={{ width: \"0.5rem\" }} />\r\n              Edit Field\r\n            </MenuItem>\r\n            <div style={{ height: \"0.5rem\" }} />\r\n            <MenuItem onClick={(evt) => handleEditDetailsClick(evt, index)}>\r\n              <images.InfoIcon />\r\n              <div style={{ width: \"0.5rem\" }} />\r\n              Details Edit\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div>\r\n          <IconButton\r\n            aria-controls={isMoreOpen && anchorIndex === index ? 'basic-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={isMoreOpen && anchorIndex === index ? 'true' : undefined}\r\n            onClick={(evt) => handleMoreClick(evt, index)}>\r\n            <images.MoreHorizIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"basic-menu\"\r\n            anchorEl={anchorMoreEl}\r\n            open={isMoreOpen && anchorIndex === index}\r\n            onClose={() => handleMoreClick(null)}\r\n            MenuListProps={{\r\n              'aria-labelledby': 'basic-button',\r\n            }}\r\n          >\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton onClick={(evt) => handleDeleteClick(evt, index)}>\r\n                <images.DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Menu>\r\n        </div>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const tableBody = (\r\n    <TableBody>\r\n      {visibleRows\r\n        ? visibleRows.map((row, index) => {\r\n          const isItemSelected = isSelected(row.id)\r\n          const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n          return (\r\n            <TableRow\r\n              hover\r\n              onClick={(event) => handleCheckboxClick(event, row.id)}\r\n              role=\"checkbox\"\r\n              aria-checked={isItemSelected}\r\n              tabIndex={-1}\r\n              key={row.id}\r\n              selected={isItemSelected}\r\n              sx={{ cursor: 'pointer' }}\r\n            >\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={isItemSelected}\r\n                  inputProps={{\r\n                    'aria-labelledby': labelId,\r\n                  }}\r\n                />\r\n              </TableCell>\r\n              <TableCell\r\n                component=\"th\"\r\n                id={labelId}\r\n                scope=\"row\"\r\n              >\r\n                {rowNameField(row, index)}\r\n              </TableCell>\r\n              <TableCell>{row.updateTime.toISOString()}</TableCell>\r\n              <TableCell>{row.noQuiz}</TableCell>\r\n              <TableCell>\r\n                {rowActions(row, index)}\r\n              </TableCell>\r\n            </TableRow>\r\n          )\r\n        })\r\n        : null}\r\n    </TableBody>)\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }} display={'flex'} justifyContent={'center'}>\r\n      <Paper sx={{ width: '80%', mb: 2 }} style={{ backgroundColor: 'inherit' }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size='small'\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={tableData.current.length}\r\n            />\r\n            {tableBody}\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={DEFAULT_ROWS_PER_PAGE_LIST}\r\n          component=\"div\"\r\n          count={tableData.current.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          sx={{\r\n            '.MuiTablePagination-displayedRows': {\r\n              marginRight: '1rem',\r\n            },\r\n            '.MuiTablePagination-actions': {\r\n              display: 'none',\r\n            },\r\n          }}\r\n        />\r\n      </Paper>\r\n      <LoadingComponent isLoading={isLoading} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(ArchiveContainer)\r\n","import { useTranslation } from 'react-i18next'\r\n\r\nimport ArchiveContainer from 'features/quizArchive/components'\r\nimport TitleTypography from 'libs/ui/components/TitleTypography'\r\n\r\nconst Page = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return <>\r\n    <TitleTypography title={t('archive.title')} />\r\n    <ArchiveContainer />\r\n  </>\r\n}\r\n\r\nexport default Page\r\n"],"names":["dispatch","useAppDispatch","selects","useAppSelector","quizArchiveSelectors","quizList","quizCollectionList","editQuiz","editCollection","getQuizCollectionList","useCallback","quizArchiveActions","getQuizCollection","data","updateQuizCollection","deleteQuizCollection","props","_jsx","_Fragment","children","Typography","component","variant","align","color","gutterBottom","title","isNullOrUndefined","value","undefined","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","Search","styled","_ref","theme","_defineProperty","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","_ref3","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","_ref4","paddingLeft","concat","transition","transitions","create","headCells","id","label","sortable","DEFAULT_ORDER","DEFAULT_ORDER_BY","DEFAULT_ROWS_PER_PAGE","Number","MAX_SAFE_INTEGER","DEFAULT_ROWS_PER_PAGE_LIST","EnhancedTableToolbar","numSelected","useQuizArchiveService","handleAddNew","event","stopPropagation","initQuizCollectionDto","Toolbar","sx","_objectSpread","pl","sm","pr","xs","bgcolor","primary","main","action","activatedOpacity","_jsxs","flex","Tooltip","IconButton","images","DeleteIcon","Box","SearchIcon","placeholder","inputProps","onClick","AddIcon","EnhancedTableHead","onSelectAllClick","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","headCell","sortDirection","TableSortLabel","active","direction","newOrderBy","visuallyHidden","connect","state","quizArchive","addCollection","setAddCollection","authData","authentication","isLoading","global","useTranslation","t","navigate","useNavigate","_useQuizArchiveServic2","tableData","useRef","_useState","useState","_useState2","_slicedToArray","setOrder","_useState3","_useState4","setOrderBy","_useState5","_useState6","selected","setSelected","_useState7","_useState8","page","setPage","_useState9","_useState10","visibleRows","setVisibleRows","_useState11","_useState12","rowsPerPage","setRowsPerPage","_useState13","_useState14","editFieldRows","setEditFieldRows","_useState15","_useState16","anchorEditEl","setAnchorEditEl","isEditOpen","Boolean","_useState17","_useState18","anchorMoreEl","setAnchorMoreEl","isMoreOpen","_useState19","_useState20","anchorIndex","setAnchorIndex","handleEditClick","arguments","length","currentTarget","handleMoreClick","hideAnchorMenu","useEffect","success","collections","current","ele","dto","_dto$eId","eId","noQuiz","quizzes","name","updateTime","updatedAt","Date","toString","createTableDataFromDto","rowsOnMount","slice","prev","_","handleChangePage","newPage","updatedRows","handleChangeRowsPerPage","updatedRowsPerPage","parseInt","target","handleRequestSort","toggledOrder","getIndexOfDataByRowIndex","rowIndex","find","console","log","indexOf","setEditFieldRowsCallback","_prev$map","newData","rowNameField","row","TextField","type","required","evt","multiline","maxRows","input","border","borderColor","borderWidth","style","newDto","handleSaveClick","SaveIcon","rowActions","Grid","container","UpdateIcon","Menu","anchorEl","open","onClose","MenuListProps","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","valueFromRow","handleEditFieldClick","EditIcon","handleEditDetailsClick","InfoIcon","MoreHorizIcon","handleDeleteClick","tableBody","TableBody","isItemSelected","labelId","hover","selectedIndex","newSelected","handleCheckboxClick","role","tabIndex","cursor","scope","toISOString","Paper","mb","TableContainer","Table","minWidth","size","n","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","LoadingComponent","TitleTypography","ArchiveContainer"],"sourceRoot":""}