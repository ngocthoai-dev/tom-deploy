{"version":3,"file":"static/js/919.09fae28f.chunk.js","mappings":"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","sources":["features/authentication/components/LandingPage/index.tsx","features/authentication/components/SharedStyles/loginStyles.tsx","features/authentication/components/Login/index.tsx","features/authentication/components/Register/index.tsx","features/authentication/components/index.tsx","pages/LoginPage.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { Button, Dialog, Grid, Typography } from '@mui/material'\r\nimport { memo, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { connect } from 'react-redux'\r\n\r\nimport images from 'config/images'\r\nimport { ReducerType } from 'store'\r\n\r\nconst mapStateToProps = (state: ReducerType) => ({})\r\n\r\n// eslint-disable-next-line react/display-name, @typescript-eslint/ban-types\r\nconst LandingPage = memo((_props: {}) => {\r\n  const { t } = useTranslation()\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const closeDialog = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      fullScreen\r\n      onClose={closeDialog}\r\n      aria-labelledby=\"form-dialog-title\"\r\n      sx={{\r\n        background: 'linear-gradient(225.7deg, #222629 44.91%, #1E453E 60.82%)',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        '& .MuiDialog-container .MuiPaper-root': {\r\n          backgroundColor: 'transparent',\r\n        },\r\n      }}>\r\n      <div style={{\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '60%',\r\n        bottom: 0,\r\n        backgroundSize: 'contain',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(\"${images.LandingPageCover}\")`,\r\n        backgroundPosition: 'bottom',\r\n        opacity: 0.4,\r\n      }}></div>\r\n      <Grid container style={{\r\n        padding: '5rem 8rem',\r\n      }}>\r\n        <Grid container style={{\r\n          height: 'fit-content',\r\n        }}>\r\n          <img src={images.AppIcon} alt={images.AppIcon} />\r\n          <Typography style={{\r\n            fontSize: '5rem',\r\n            fontFamily: 'Poppins',\r\n            background: 'linear-gradient(180deg, #FCE38A 0%, #CC2A2A 100%)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            marginLeft: '2rem',\r\n          }}>{t('company.title')}</Typography>\r\n        </Grid>\r\n        <Grid container alignItems=\"flex-end\" direction=\"column\">\r\n          <Typography style={{\r\n            fontFamily: 'Poppins',\r\n            fontSize: '5rem',\r\n            color: 'white',\r\n          }}>\r\n            <span style={{\r\n              color: '#19A186',\r\n              fontSize: '6rem',\r\n            }}>Study. </span> And.\r\n            <span style={{\r\n              color: '#86C232',\r\n              fontSize: '6rem',\r\n            }}> Play.</span>\r\n          </Typography>\r\n          <Typography style={{\r\n            fontFamily: 'Poppins',\r\n            fontSize: '2rem',\r\n            color: 'white',\r\n          }}>\r\n            Come join now and share knowledge with others.\r\n          </Typography>\r\n          <Button onClick={closeDialog} style={{\r\n            height: '5rem',\r\n            color: 'white',\r\n            backgroundColor: '#61892F',\r\n            marginRight: '10%',\r\n            marginTop: '6rem',\r\n            fontSize: '1.8rem',\r\n            width: '20%',\r\n          }}>\r\n            Join now\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  )\r\n})\r\n\r\nexport default connect(mapStateToProps)(LandingPage)\r\n","export default {\r\n  rootUsername: 'rootUsername',\r\n  inputLabel: 'inputLabel',\r\n  rootPasswordLabel: 'rootPasswordLabel',\r\n  rootSignInButton: 'rootSignInButton',\r\n  rootDivider: 'rootDivider',\r\n  rootOR: 'rootOR',\r\n  rootSignUpButton: 'rootSignUpButton',\r\n  rootFormContainer: 'rootFormContainer',\r\n  error: 'error',\r\n}","import { Button, Grid, IconButton, InputAdornment, InputBase, Typography } from '@mui/material'\r\nimport clsx from 'clsx'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { PASSWORD_REGEX_ERROR, USERNAME_REGEX_ERROR } from 'config/defines'\r\nimport images from 'config/images'\r\nimport { useAuthenticationService } from 'features/authentication/hooks'\r\nimport { LoginActionType } from 'features/authentication/types'\r\nimport { ReducerType } from 'store'\r\n\r\nimport classes from '../SharedStyles/loginStyles'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst mapStateToProps = (state: ReducerType) => ({\r\n})\r\n\r\ninterface LoginProps {\r\n  setLogin: () => void\r\n}\r\n\r\nconst Login = (props: LoginProps) => {\r\n  const { setLogin } = props\r\n  const [isShowPass, setIsShowPass] = useState(false)\r\n  const { handleSubmit, register, formState: { errors } } = useForm<LoginActionType>()\r\n  const { login } = useAuthenticationService.default()\r\n\r\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setIsShowPass(!isShowPass)\r\n  }\r\n\r\n  const onSubmit = (values: LoginActionType) => {\r\n    const { username, password } = values\r\n    login({\r\n      username,\r\n      password,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.rootFormContainer}>\r\n      <Grid container direction=\"column\">\r\n        <Typography classes={{ root: classes.inputLabel }}>Username:</Typography>\r\n        <InputBase\r\n          placeholder=\"Username\"\r\n          className={classes.rootUsername}\r\n          {...register('username', {\r\n            required: true,\r\n            maxLength: 16,\r\n            pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,}$/,\r\n          })}\r\n        />\r\n        {errors.username && (\r\n          <span className={classes.error}>\r\n            <images.InfoIcon />\r\n            {errors.username.type === 'required'\r\n              ? 'Username is required'\r\n              : USERNAME_REGEX_ERROR}\r\n          </span>\r\n        )}\r\n        <Typography classes={{ root: clsx(classes.inputLabel, classes.rootPasswordLabel) }}>\r\n          Password:\r\n        </Typography>\r\n        <InputBase\r\n          placeholder=\"Password\"\r\n          type={isShowPass ? 'text' : 'password'}\r\n          classes={{ root: classes.rootUsername }}\r\n          {...register('password', {\r\n            required: true,\r\n            maxLength: 16,\r\n            pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,}$/,\r\n          })}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                style={{ color: 'white' }}>\r\n                {isShowPass ? <images.VisibilityIcon /> : <images.VisibilityOffIcon />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        {errors.password && (\r\n          <span className={classes.error}>\r\n            <images.InfoIcon />\r\n            {errors.password.type === 'required'\r\n              ? 'Password is required'\r\n              : PASSWORD_REGEX_ERROR}\r\n          </span>\r\n        )}\r\n        <Button classes={{ root: classes.rootSignInButton }} type=\"submit\">\r\n          sign in\r\n        </Button>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <Grid classes={{ root: classes.rootDivider }} />\r\n          <Typography classes={{ root: classes.rootOR }}>OR</Typography>\r\n          <Grid classes={{ root: classes.rootDivider }} />\r\n        </Grid>\r\n        <Button classes={{ root: classes.rootSignUpButton }} onClick={setLogin}>\r\n          go to sign up\r\n        </Button>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login)\r\n","/* eslint-disable no-nested-ternary */\r\nimport {\r\n  Button,\r\n  Grid, IconButton,\r\n  InputAdornment, InputBase, Typography\r\n} from '@mui/material'\r\nimport clsx from 'clsx'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { PASSWORD_REGEX_ERROR, USERNAME_REGEX_ERROR } from 'config/defines'\r\nimport images from 'config/images'\r\nimport { RegisterActionType } from 'features/authentication'\r\nimport { useAuthenticationService } from 'features/authentication/hooks'\r\nimport { ReducerType } from 'store'\r\n\r\nimport classes from '../SharedStyles/loginStyles'\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst mapStateToProps = (state: ReducerType) => ({\r\n})\r\n\r\ninterface RegisterProps {\r\n  setLogin: () => void\r\n}\r\n\r\nconst Register = (props: RegisterProps) => {\r\n  const { setLogin } = props\r\n  const [isShowPass, setIsShowPass] = useState(false)\r\n  const [isShowRePass, setIsShowRePass] = useState(false)\r\n  const { handleSubmit, register, formState: { errors }, getValues } = useForm<RegisterActionType>()\r\n  const service = useAuthenticationService.default()\r\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  const handleClickShowPassword = () => {\r\n    setIsShowPass(!isShowPass)\r\n  }\r\n\r\n  const handleClickShowRePassword = () => {\r\n    setIsShowRePass(!isShowRePass)\r\n  }\r\n\r\n  const onSubmit = (values: RegisterActionType) => {\r\n    const { username, password, email, repassword } = values\r\n    service.register({\r\n      username,\r\n      password,\r\n      email,\r\n      repassword,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.rootFormContainer}>\r\n      <Grid container direction=\"column\">\r\n        <Typography classes={{ root: classes.inputLabel }}>Username:</Typography>\r\n        <InputBase\r\n          placeholder=\"Username\"\r\n          classes={{ root: classes.rootUsername }}\r\n          {...register('username', {\r\n            required: true,\r\n            maxLength: 16,\r\n            pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,}$/,\r\n          })}\r\n        />\r\n        {errors.username && (\r\n          <span className={classes.error}>\r\n            <images.InfoIcon />\r\n            {errors.username.type === 'required'\r\n              ? 'Username is required'\r\n              : USERNAME_REGEX_ERROR}\r\n          </span>\r\n        )}\r\n        <Typography classes={{ root: clsx(classes.inputLabel, classes.rootPasswordLabel) }}>\r\n          Password:\r\n        </Typography>\r\n        <InputBase\r\n          placeholder=\"Password\"\r\n          type={isShowPass ? 'text' : 'password'}\r\n          classes={{ root: classes.rootUsername }}\r\n          {...register('password', {\r\n            required: true,\r\n            maxLength: 16,\r\n            pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,}$/,\r\n          })}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                style={{ color: 'white' }}>\r\n                {isShowPass ? <images.VisibilityIcon /> : <images.VisibilityOffIcon />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        {errors.password && (\r\n          <span className={classes.error}>\r\n            <images.InfoIcon />\r\n            {errors.password.type === 'required'\r\n              ? 'Password is required'\r\n              : PASSWORD_REGEX_ERROR}\r\n          </span>\r\n        )}\r\n        <Typography classes={{ root: clsx(classes.inputLabel, classes.rootPasswordLabel) }}>\r\n          Confirm Password:\r\n        </Typography>\r\n        <InputBase\r\n          placeholder=\"Confirm Password\"\r\n          type={isShowRePass ? 'text' : 'password'}\r\n          classes={{ root: classes.rootUsername }}\r\n          {...register('repassword', {\r\n            required: true,\r\n            maxLength: 16,\r\n            pattern: /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+){8,}$/,\r\n            validate: {\r\n              equalPassword: (value) => value === getValues('password'),\r\n            },\r\n          })}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle repassword visibility\"\r\n                onClick={handleClickShowRePassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                style={{ color: 'white' }}>\r\n                {isShowRePass ? <images.VisibilityIcon /> : <images.VisibilityOffIcon />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        {errors.repassword && (\r\n          <span className={classes.error}>\r\n            <images.InfoIcon />\r\n            {errors.repassword.type === 'required'\r\n              ? 'Repassword is required'\r\n              : errors.repassword.type === 'pattern'\r\n                ? PASSWORD_REGEX_ERROR\r\n                : 'The repassword must be the same with password'}\r\n          </span>\r\n        )}\r\n\r\n        <Typography classes={{ root: clsx(classes.inputLabel, classes.rootPasswordLabel) }}>\r\n          Email:\r\n        </Typography>\r\n        <InputBase\r\n          placeholder=\"Input email\"\r\n          type=\"text\"\r\n          classes={{ root: classes.rootUsername }}\r\n          {...register('email', { required: true, pattern: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/ })}\r\n        />\r\n        {errors.email && (\r\n          <span className={classes.error}>\r\n            <images.InfoIcon />\r\n            {errors.email.type === 'required'\r\n              ? 'Email is required'\r\n              : 'Please input correct email format'}\r\n          </span>\r\n        )}\r\n\r\n        <Button classes={{ root: classes.rootSignInButton }} type=\"submit\">\r\n          sign up\r\n        </Button>\r\n        <Grid container direction=\"row\" alignItems=\"center\">\r\n          <Grid classes={{ root: classes.rootDivider }} />\r\n          <Typography classes={{ root: classes.rootOR }}>OR</Typography>\r\n          <Grid classes={{ root: classes.rootDivider }} />\r\n        </Grid>\r\n        <Button classes={{ root: classes.rootSignUpButton }} onClick={setLogin}>\r\n          go to sign in\r\n        </Button>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register)\r\n","import { Backdrop, CircularProgress, Grid, Typography } from '@mui/material'\r\nimport { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { connect } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport images from 'config/images'\r\nimport { checkToken } from 'libs/core/configureAxios'\r\nimport { ReducerType } from 'store'\r\n\r\nimport { AuthType } from '../types'\r\n\r\nimport LandingPage from './LandingPage'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\n\r\nconst mapStateToProps = (state: ReducerType) => ({\r\n  authData: state.authentication.authData,\r\n  isLoading: state.global.isLoading,\r\n})\r\n\r\ninterface AuthProps {\r\n  authData: AuthType\r\n  isLoading: boolean\r\n}\r\n\r\nconst AuthenticationContainer = (props: AuthProps) => {\r\n  const { t } = useTranslation()\r\n  const { authData, isLoading } = props\r\n  const [isLoginPage, setIsLoginPage] = useState(true)\r\n  const [isLoggedIn, setIsLoggedIn] = useState(checkToken())\r\n  const navigate = useNavigate()\r\n\r\n  const setLogin = () => {\r\n    setIsLoginPage(!isLoginPage)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (authData.accessToken) {\r\n      setIsLoggedIn(Boolean(setIsLoggedIn))\r\n    } else {\r\n      setIsLoggedIn(checkToken())\r\n    }\r\n  }, [authData])\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      navigate('/')\r\n    }\r\n  }, [navigate, isLoggedIn])\r\n\r\n  return (\r\n    <Grid container style={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(107.56deg, #222629 12.02%, #1E453E 62.02%)',\r\n    }}>\r\n      <Grid container item xs={6} style={{ padding: '5rem 0 0 8rem', }}>\r\n        <Grid container style={{ height: 'fit-content', }}>\r\n          <img src={images.AppIcon} alt={images.AppIcon} />\r\n          <Typography style={{\r\n            fontSize: '5rem',\r\n            fontFamily: 'Poppins',\r\n            background: '-webkit-linear-gradient(180deg, #FCE38A 0%, #CC2A2A 100%)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            marginLeft: '2rem',\r\n          }}>{t('company.title')}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography style={{\r\n            fontSize: '4rem',\r\n            fontWeight: 'bold',\r\n            background: '-webkit-linear-gradient(180deg, #B3B990 100%, #86C232 47%)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            fontFamily: 'Poppins',\r\n          }}>\r\n            Join the\r\n            <span style={{\r\n              fontSize: '6rem',\r\n              background: '-webkit-linear-gradient(180deg, #86C232 100%, #86C232 100%)',\r\n              WebkitBackgroundClip: 'text',\r\n              fontWeight: 'bold',\r\n              WebkitTextFillColor: 'transparent',\r\n              fontFamily: 'Poppins',\r\n            }}> fun.</span>\r\n          </Typography>\r\n        </Grid>\r\n        <img src={images.GameIcon} alt={images.GameIcon} style={{\r\n          objectFit: 'cover',\r\n          opacity: 0.7,\r\n          transform: 'rotate(30deg)',\r\n          margin: '0 0 20% 0'\r\n        }} />\r\n      </Grid>\r\n      <Grid container item xs={6} alignItems=\"center\" justifyContent=\"center\">\r\n        {isLoginPage ? <Login setLogin={setLogin} /> : <Register setLogin={setLogin} />}\r\n      </Grid>\r\n      <LandingPage />\r\n      <Backdrop style={{\r\n        zIndex: 1,\r\n        color: '#fff',\r\n      }} open={isLoading}>\r\n        <CircularProgress style={{ color: '#E9781C' }} />\r\n      </Backdrop>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthenticationContainer)\r\n","import AuthenticationContainer from 'features/authentication/components'\r\n\r\nconst Page = () => <AuthenticationContainer />\r\n\r\nexport default Page\r\n"],"names":["LandingPage","memo","_props","t","useTranslation","_useState","useState","_useState2","_slicedToArray","open","setOpen","closeDialog","_jsxs","Dialog","fullScreen","onClose","sx","background","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","children","_jsx","style","position","height","width","bottom","backgroundImage","concat","images","LandingPageCover","opacity","Grid","container","padding","src","AppIcon","alt","Typography","fontSize","fontFamily","WebkitBackgroundClip","WebkitTextFillColor","marginLeft","alignItems","direction","color","Button","onClick","marginRight","marginTop","connect","state","props","setLogin","isShowPass","setIsShowPass","_useForm","useForm","handleSubmit","register","errors","formState","login","useAuthenticationService","onSubmit","values","username","password","className","classes","root","InputBase","_objectSpread","placeholder","required","maxLength","pattern","InfoIcon","type","USERNAME_REGEX_ERROR","clsx","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","VisibilityIcon","VisibilityOffIcon","PASSWORD_REGEX_ERROR","_useState3","_useState4","isShowRePass","setIsShowRePass","getValues","service","handleMouseDownPassword","email","repassword","validate","equalPassword","value","authData","authentication","isLoading","global","isLoginPage","setIsLoginPage","checkToken","isLoggedIn","setIsLoggedIn","navigate","useNavigate","useEffect","accessToken","Boolean","minHeight","item","xs","fontWeight","GameIcon","objectFit","transform","margin","justifyContent","Login","Register","Backdrop","zIndex","CircularProgress","AuthenticationContainer"],"sourceRoot":""}